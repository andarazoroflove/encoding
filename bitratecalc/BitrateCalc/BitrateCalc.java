/*
 * Applet_3.java
 *
 * Created on den 26 april 2001, 14:20
 */


/**
 *
 * @author  Baldrick
 * @version 
 */
public class BitrateCalc extends java.applet.Applet {

    /** Initializes the applet Applet_3 */
    public void init () {
        initComponents ();
        type.addItem("XVCD");
        type.addItem("SVCD");
        type.addItem("DVD");
        type.addItem("DivX");
        type.select(1);
        size.addItem("74");
        size.addItem("80");
        size.addItem("90");
        size.addItem("99");
        size.addItem("100");
        size.select(0);
        customsize.setText(size.getSelectedItem());
        audio.addItem("64");
        audio.addItem("96");
        audio.addItem("112");
        audio.addItem("128");
        audio.addItem("160");
        audio.addItem("192");
        audio.addItem("224");
        audio.addItem("384");
        audio.select(6);
        customaudio.setText(audio.getSelectedItem());
        update();
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        time = new java.awt.TextField();
        cds = new java.awt.TextField();
        audio = new java.awt.Choice();
        size = new java.awt.Choice();
        result = new java.awt.TextField();
        max = new java.awt.TextField();
        sec = new java.awt.TextField();
        customaudio = new java.awt.TextField();
        customsize = new java.awt.TextField();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();
        label7 = new java.awt.Label();
        label8 = new java.awt.Label();
        label9 = new java.awt.Label();
        label10 = new java.awt.Label();
        label11 = new java.awt.Label();
        label12 = new java.awt.Label();
        label13 = new java.awt.Label();
        label14 = new java.awt.Label();
        resultbit = new java.awt.TextField();
        label15 = new java.awt.Label();
        simple = new java.awt.Button();
        label16 = new java.awt.Label();
        type = new java.awt.Choice();
        label17 = new java.awt.Label();
        setLayout(null);
        setBackground(new java.awt.Color (231, 231, 231));
        setForeground(java.awt.Color.gray);
        
        time.setBackground(java.awt.Color.white);
        time.setName("time");
        time.setFont(new java.awt.Font ("Dialog", 0, 11));
        time.setForeground(java.awt.Color.black);
        time.setText("90");
        time.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField2KeyReleased(evt);
            }
        }
        );
        
        add(time);
        time.setBounds(60, 10, 30, 20);
        
        
        cds.setBackground(java.awt.Color.white);
        cds.setName("cds");
        cds.setFont(new java.awt.Font ("Dialog", 0, 11));
        cds.setForeground(java.awt.Color.black);
        cds.setText("2");
        cds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField3ActionPerformed(evt);
            }
        }
        );
        cds.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField3KeyReleased(evt);
            }
        }
        );
        
        add(cds);
        cds.setBounds(60, 40, 30, 20);
        
        
        audio.setFont(new java.awt.Font ("Dialog", 0, 11));
        audio.setName("audio");
        audio.setBackground(java.awt.Color.white);
        audio.setForeground(java.awt.Color.black);
        audio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                choice1ItemStateChanged(evt);
            }
        }
        );
        
        add(audio);
        audio.setBounds(230, 10, 50, 20);
        
        
        size.setFont(new java.awt.Font ("Dialog", 0, 11));
        size.setName("size");
        size.setBackground(java.awt.Color.white);
        size.setForeground(java.awt.Color.black);
        size.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                choice2ItemStateChanged(evt);
            }
        }
        );
        
        add(size);
        size.setBounds(120, 40, 50, 20);
        
        
        result.setBackground(new java.awt.Color (146, 185, 153));
        result.setName("textfield11");
        result.setFont(new java.awt.Font ("Dialog", 0, 11));
        result.setForeground(java.awt.Color.black);
        result.setText("textField1");
        
        add(result);
        result.setBounds(140, 80, 40, 20);
        
        
        max.setBackground(new java.awt.Color (165, 195, 149));
        max.setName("textfield12");
        max.setFont(new java.awt.Font ("Dialog", 0, 11));
        max.setForeground(java.awt.Color.black);
        max.setText("textField2");
        
        add(max);
        max.setBounds(310, 80, 40, 20);
        
        
        sec.setBackground(java.awt.Color.white);
        sec.setName("textfield13");
        sec.setFont(new java.awt.Font ("Dialog", 0, 11));
        sec.setForeground(java.awt.Color.black);
        sec.setText("0");
        sec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                secKeyReleased(evt);
            }
        }
        );
        
        add(sec);
        sec.setBounds(120, 10, 30, 20);
        
        
        customaudio.setBackground(java.awt.Color.white);
        customaudio.setName("textfield14");
        customaudio.setFont(new java.awt.Font ("Dialog", 0, 11));
        customaudio.setVisible(false);
        customaudio.setForeground(java.awt.Color.black);
        customaudio.setText("0");
        customaudio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customaudioKeyReleased(evt);
            }
        }
        );
        
        add(customaudio);
        customaudio.setBounds(390, 10, 30, 20);
        
        
        customsize.setBackground(java.awt.Color.white);
        customsize.setName("textfield15");
        customsize.setFont(new java.awt.Font ("Dialog", 0, 11));
        customsize.setVisible(false);
        customsize.setForeground(java.awt.Color.black);
        customsize.setText("0");
        customsize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customsizeKeyReleased(evt);
            }
        }
        );
        
        add(customsize);
        customsize.setBounds(250, 40, 30, 20);
        
        
        label1.setFont(new java.awt.Font ("Dialog", 0, 11));
        label1.setName("label2");
        label1.setBackground(label1.getBackground());
        label1.setForeground(java.awt.Color.black);
        label1.setText("Video Min");
        
        add(label1);
        label1.setBounds(7, 10, 50, 20);
        
        
        label2.setFont(new java.awt.Font ("Dialog", 0, 11));
        label2.setName("label3");
        label2.setBackground(label2.getBackground());
        label2.setForeground(java.awt.Color.black);
        label2.setText("Sec");
        
        add(label2);
        label2.setBounds(97, 10, 20, 20);
        
        
        label3.setFont(new java.awt.Font ("Dialog", 0, 11));
        label3.setBackground(label3.getBackground());
        label3.setForeground(java.awt.Color.black);
        label3.setText("Audio Bitrate");
        
        add(label3);
        label3.setBounds(160, 10, 70, 20);
        
        
        label4.setFont(new java.awt.Font ("Dialog", 0, 11));
        label4.setBackground(label4.getBackground());
        label4.setForeground(java.awt.Color.black);
        label4.setText("CD:s");
        
        add(label4);
        label4.setBounds(30, 40, 30, 20);
        
        
        label5.setFont(new java.awt.Font ("Dialog", 0, 11));
        label5.setBackground(label5.getBackground());
        label5.setForeground(java.awt.Color.black);
        label5.setText("x");
        label5.setAlignment(java.awt.Label.CENTER);
        
        add(label5);
        label5.setBounds(90, 40, 30, 20);
        
        
        label6.setFont(new java.awt.Font ("Dialog", 0, 11));
        label6.setBackground(label6.getBackground());
        label6.setForeground(java.awt.Color.black);
        label6.setText("Calculated Average Bitrate");
        
        add(label6);
        label6.setBounds(7, 80, 130, 20);
        
        
        label7.setFont(new java.awt.Font ("Dialog", 0, 11));
        label7.setBackground(label7.getBackground());
        label7.setForeground(java.awt.Color.black);
        label7.setText("kbit/s");
        
        add(label7);
        label7.setBounds(280, 10, 40, 20);
        
        
        label8.setFont(new java.awt.Font ("Dialog", 0, 11));
        label8.setBackground(label8.getBackground());
        label8.setForeground(java.awt.Color.black);
        label8.setText("CustomCD");
        label8.setVisible(false);
        
        add(label8);
        label8.setBounds(190, 40, 60, 20);
        
        
        label9.setFont(new java.awt.Font ("Dialog", 0, 11));
        label9.setBackground(label9.getBackground());
        label9.setForeground(java.awt.Color.black);
        label9.setText("SVCD Max Bitrate");
        
        add(label9);
        label9.setBounds(220, 80, 90, 20);
        
        
        label10.setFont(new java.awt.Font ("Dialog", 0, 11));
        label10.setBackground(label10.getBackground());
        label10.setForeground(java.awt.Color.black);
        label10.setText("Min");
        label10.setVisible(false);
        
        add(label10);
        label10.setBounds(280, 40, 20, 20);
        
        
        label11.setFont(new java.awt.Font ("Dialog", 0, 11));
        label11.setBackground(label11.getBackground());
        label11.setForeground(java.awt.Color.black);
        label11.setText("kbit/s");
        label11.setVisible(false);
        
        add(label11);
        label11.setBounds(420, 10, 40, 20);
        
        
        label12.setFont(new java.awt.Font ("Dialog", 0, 11));
        label12.setName("label12");
        label12.setBackground(label12.getBackground());
        label12.setForeground(java.awt.Color.black);
        label12.setText("Min");
        
        add(label12);
        label12.setBounds(170, 40, 20, 20);
        
        
        label13.setFont(new java.awt.Font ("Dialog", 0, 11));
        label13.setName("label13");
        label13.setBackground(label13.getBackground());
        label13.setForeground(java.awt.Color.black);
        label13.setText("kbit/s");
        
        add(label13);
        label13.setBounds(180, 80, 30, 20);
        
        
        label14.setFont(new java.awt.Font ("Dialog", 0, 11));
        label14.setName("label6");
        label14.setBackground(label14.getBackground());
        label14.setForeground(java.awt.Color.black);
        label14.setText("kbit/s");
        
        add(label14);
        label14.setBounds(350, 80, 30, 20);
        
        
        resultbit.setBackground(java.awt.Color.white);
        resultbit.setFont(new java.awt.Font ("Dialog", 0, 11));
        resultbit.setVisible(false);
        resultbit.setForeground(java.awt.Color.black);
        resultbit.setText("textField1");
        
        add(resultbit);
        resultbit.setBounds(140, 100, 50, 20);
        
        
        label15.setFont(new java.awt.Font ("Dialog", 0, 11));
        label15.setBackground(label15.getBackground());
        label15.setForeground(java.awt.Color.black);
        label15.setText("bit/s");
        label15.setVisible(false);
        
        add(label15);
        label15.setBounds(190, 100, 30, 20);
        
        
        simple.setFont(new java.awt.Font ("Dialog", 0, 11));
        simple.setLabel("Advanced");
        simple.setName("simple");
        simple.setBackground(java.awt.Color.lightGray);
        simple.setForeground(java.awt.Color.black);
        simple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        }
        );
        
        add(simple);
        simple.setBounds(385, 38, 70, 20);
        
        
        label16.setFont(new java.awt.Font ("Dialog", 0, 11));
        label16.setName("label12");
        label16.setBackground(label16.getBackground());
        label16.setForeground(java.awt.Color.black);
        label16.setText("CustomAudio");
        label16.setVisible(false);
        
        add(label16);
        label16.setBounds(320, 10, 70, 20);
        
        
        type.setFont(new java.awt.Font ("Dialog", 0, 11));
        type.setBackground(java.awt.Color.white);
        type.setForeground(java.awt.Color.black);
        type.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeItemStateChanged(evt);
            }
        }
        );
        
        add(type);
        type.setBounds(320, 40, 60, 20);
        
        
        label17.setFont(new java.awt.Font ("Dialog", 0, 11));
        label17.setName("label16");
        label17.setBackground(label17.getBackground());
        label17.setForeground(java.awt.Color.black);
        label17.setText("Type");
        
        add(label17);
        label17.setBounds(300, 40, 30, 20);
        
    }//GEN-END:initComponents

  private void typeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeItemStateChanged
// Add your handling code here:
      if (type.getSelectedItem()=="DVD")
      {
        label4.setText("DVD");
        size.removeAll();
        size.addItem("4.37");
        size.addItem("8.75");
        label12.setText("GB");
        label8.setText("CustomDVD");
        label10.setText("GB Type");      
        customsize.setText(size.getSelectedItem());
        customaudio.setText(audio.getSelectedItem());
//        cds.setText("1");
        label9.setVisible(true);
        label14.setVisible(true);
        max.setVisible(true);
        label9.setText("DVD Max Bitrate");
      }
      else if (type.getSelectedItem()=="DivX")
      {
          label4.setText("CD:s");
        size.removeAll();
        size.addItem("650");
        size.addItem("700");
        size.addItem("750");
        label12.setText("MB");
        label8.setText("CustomCD");
        label10.setText("MB Type");
        customsize.setText(size.getSelectedItem());
        customaudio.setText(audio.getSelectedItem());
  //      cds.setText("1");
        label9.setVisible(false);
        label14.setVisible(false);
        max.setVisible(false);
      }
      else
      {
       label4.setText("CD:s");
        size.removeAll();
        size.addItem("74");
        size.addItem("80");
        size.addItem("90");
        size.addItem("99");
        size.addItem("100");
        label12.setText("Min");
        label8.setText("CustomCD");
        label10.setText("Min Type");
        customsize.setText(size.getSelectedItem());
        customaudio.setText(audio.getSelectedItem());
    //    cds.setText("2");
        label9.setVisible(true);
        label14.setVisible(true);
        max.setVisible(true);
        label9.setText("SVCD Max Bitrate");
        if (type.getSelectedItem()=="XVCD")
        {
            label9.setVisible(false);
            label14.setVisible(false);
            max.setVisible(false);
        }
            
      }
      update();
  }//GEN-LAST:event_typeItemStateChanged

  private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
// Add your handling code here:
      if (customaudio.isVisible())
      {
          simple.setLabel("Advanced");
          simple.setLocation(385,38);
          simple.setSize(70,20);
          customaudio.setVisible(false);
          customsize.setVisible(false);
          label11.setVisible(false);
          label8.setVisible(false);
          label10.setVisible(false);
         // resultbit.setVisible(false);
         // label15.setVisible(false);
          label16.setVisible(false);
          //type.setVisible(false);
      }
      else
      {
          simple.setLabel("Simple mode");
          simple.setLocation(385,38);
          simple.setSize(70,20);
          customaudio.setVisible(true);
          customsize.setVisible(true);
          label11.setVisible(true);
          label8.setVisible(true);
          label10.setVisible(true);
         // resultbit.setVisible(true);
         // label15.setVisible(true);
          label16.setVisible(true);
          type.setVisible(true);
      }
  }//GEN-LAST:event_button1ActionPerformed

  private void customaudioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customaudioKeyReleased
// Add your handling code here:
      audio.remove(7);
      audio.add(customaudio.getText());
      audio.select(7);
      update();
  }//GEN-LAST:event_customaudioKeyReleased

  private void secKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secKeyReleased
// Add your handling code here:
      update();
  }//GEN-LAST:event_secKeyReleased

  private void customsizeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customsizeKeyReleased
// Add your handling code here:
      size.remove(size.getItemCount()-1);
      size.add(customsize.getText());
      size.select(size.getItemCount()-1);
      update();
  }//GEN-LAST:event_customsizeKeyReleased

  private void textField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField3ActionPerformed
// Add your handling code here:
  }//GEN-LAST:event_textField3ActionPerformed

  private void choice2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_choice2ItemStateChanged
// Add your handling code here:
      customsize.setText(size.getSelectedItem());
      update();
  }//GEN-LAST:event_choice2ItemStateChanged

  private void choice1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_choice1ItemStateChanged
// Add your handling code here:
      customaudio.setText(audio.getSelectedItem());
      update();
  }//GEN-LAST:event_choice1ItemStateChanged

  private void textField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField3KeyReleased
// Add your handling code here:
      update();
  }//GEN-LAST:event_textField3KeyReleased

  private void textField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField2KeyReleased
// Add your handling code here:
      update();
  }//GEN-LAST:event_textField2KeyReleased


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private java.awt.TextField time;
  private java.awt.TextField cds;
  private java.awt.Choice audio;
  private java.awt.Choice size;
  private java.awt.TextField result;
  private java.awt.TextField max;
  private java.awt.TextField sec;
  private java.awt.TextField customaudio;
  private java.awt.TextField customsize;
  private java.awt.Label label1;
  private java.awt.Label label2;
  private java.awt.Label label3;
  private java.awt.Label label4;
  private java.awt.Label label5;
  private java.awt.Label label6;
  private java.awt.Label label7;
  private java.awt.Label label8;
  private java.awt.Label label9;
  private java.awt.Label label10;
  private java.awt.Label label11;
  private java.awt.Label label12;
  private java.awt.Label label13;
  private java.awt.Label label14;
  private java.awt.TextField resultbit;
  private java.awt.Label label15;
  private java.awt.Button simple;
  private java.awt.Label label16;
  private java.awt.Choice type;
  private java.awt.Label label17;
  // End of variables declaration//GEN-END:variables

  public void update()
    {
        Double time2;
        Double sec2;
        Double audio2;
        Double size2;
        Double cds2;
        
        try
        {
            time2 = new Double(time.getText());
        }
        catch(NumberFormatException _ex)
        {
            time2 = new Double(0.00000000001);
        }
        try
        {
            sec2 = new Double(sec.getText());
        }
        catch(NumberFormatException _ex)
        {
            sec2 = new Double(0.00000000001);
        }
        try
        {
            audio2 = new Double(audio.getSelectedItem());
        }
        catch(NumberFormatException _ex)
        {
            audio2 = new Double(0.00000000001);
        }
        try
        {
            size2 = new Double(size.getSelectedItem());
        }
        catch(NumberFormatException _ex)
        {
            size2 = new Double(0.00000000001);
        }
        try
        {
            cds2 = new Double(cds.getText());
        }
        catch(NumberFormatException _ex)
        {
            cds2 = new Double(0.00000000001);
        }

        double maxsvcd=2788000;
        double iso=1228800;
        double peshead=7312800;
        double antalcds=(double)cds2.intValue();
        double tid = time2.doubleValue() + (sec2.doubleValue() / 60);
        double storlek = size2.doubleValue();
        double ljud = (double)((audio2.doubleValue() * 1024 )/8);
        if(tid == 0)
            tid = (double)0.000000001;
        tid *= 60;
        
        double extrabit=((double)2048/2048);
        double extrabitmax=(double)2048/2048;
        double extraheaders=tid*1.3;
        double extrapadding;
        double sector=2324;
        double resultat1;
        double nyttljud=ljud*tid;
        double maxljud=ljud*8;

          
        if (type.getSelectedItem()=="DVD")
        {
            sector=2048;
            storlek*=1024*1024*1024*antalcds;
            maxsvcd=9800000;
            resultat1 = (double)(((( storlek - nyttljud )/tid/1024)*8));
            double svcdmax= (double) ((maxsvcd-maxljud)/1024);
            
            if (resultat1>svcdmax)
                     resultat1=svcdmax;
            
            result.setText(new Long(new Double(resultat1).intValue()).toString());
            resultbit.setText(new Long(new Double((resultat1*1024)).intValue()).toString());
            max.setText(new Long(new Double(svcdmax).intValue()).toString());
        }
        else if (type.getSelectedItem()=="DivX")
        {
            sector=2048;
            storlek*=1024*1024*antalcds;
            resultat1 = (double)(((( storlek - nyttljud )/tid/1024)*8));
            result.setText(new Long(new Double(resultat1).intValue()).toString());
            resultbit.setText(new Long(new Double((resultat1*1024)).intValue()).toString());
            double svcdmax= (double) ((maxsvcd-maxljud-sector-1.3)/1024);
            max.setText(new Long(new Double(svcdmax).intValue()).toString());
        }
        else
        {
            extrapadding=tid*sector;
            

            storlek*=60*sector*75*antalcds;
            resultat1 = (double)(((( storlek - iso - peshead - extraheaders - extrapadding - nyttljud )/tid/1024)*8));
            double svcdmax= (double) ((maxsvcd-maxljud-sector-1.3)/1024);
            
            if (type.getSelectedItem()=="SVCD")
            {   
                if (resultat1>svcdmax)
                     resultat1=svcdmax;
            }
            result.setText(new Long(new Double(resultat1).intValue()).toString());
            resultbit.setText(new Long(new Double((resultat1*1024)).intValue()).toString());
            max.setText(new Long(new Double(svcdmax).intValue()).toString());
        }
    }
}
